[build-system]
requires = ["setuptools", "wheel", "setuptools_scm[toml]>=7"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
version_file = "src/isolate/_isolate_version.py"

[tool.setuptools.packages.find]
where = ["src"]
include = ["isolate"]
namespaces = false

[project]
name = "isolate"
dynamic = ["version"]
readme = "README.md"
description = "Managed isolated environments for Python"
authors = [{ name = "Features & Labels", email = "hello@fal.ai"}]
requires-python = ">=3.8"
dependencies = [
    # NOTE: make sure you re-generate python bindings (see tools/regen_grpc.py)
    # when updating grpcio version.
    "grpcio>=1.64.0,<2",
    "protobuf",
    # These are non-intrusive packages with no transitive dependencies.
    # They are also used in the agents themselves.
    "tblib>=1.7.0",
    "platformdirs",
    # For 3.10 and later, importlib-metadata's newer versions are included in the
    # standard library.
    'importlib-metadata>=4.4; python_version < "3.10"',
]

[project.urls]
Issues = "https://github.com/fal-ai/isolate/issues"
Source = "https://github.com/fal-ai/isolate"

[project.optional-dependencies]
build = [
    # The following are build-related dependencies, and their usage sites are heavily
    # guarded with optional_import() calls.
    "virtualenv>=20.4",
    "PyYAML>=6.0",
]
test = [
    "isolate[build]",
    "pytest",
    "cloudpickle>=2.2.0",
    "dill>=0.3.5.1",
    "flaky",
]
dev = [
    "isolate[test]",
    "grpcio-tools==1.64.0",
]


[project.entry-points."isolate.backends"]
"virtualenv" = "isolate.backends.virtualenv:VirtualPythonEnvironment"
"conda" = "isolate.backends.conda:CondaEnvironment"
"local" = "isolate.backends.local:LocalPythonEnvironment"
"container" = "isolate.backends.container:ContainerizedPythonEnvironment"
"isolate-server" = "isolate.backends.remote:IsolateServer"
"pyenv" = "isolate.backends.pyenv:PyenvEnvironment"

[tool.ruff]
target-version = "py38"
exclude = ["*_pb2.py", "*_pb2.pyi", "*_pb2_grpc.py"]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.ruff.lint]
select = ["E", "F", "W", "PLC", "PLE", "PLW", "I", "UP"]
